{"version":3,"sources":["../src/remapErrors.js"],"names":["remapError","error","message","includes","DisconnectedDevice","rethrowError","e","decoratePromiseErrors","promise","catch"],"mappings":";;;;;;;AACA;;AAEO,MAAMA,UAAU,GAAIC,KAAD,IAAmB;AAC3C,MAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,OAArB,EAA8B,OAAOD,KAAP;;AAC9B,MACEA,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuB,kBAAvB,KACAF,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuB,WAAvB,CAFF,EAGE;AACA,WAAO,IAAIC,0BAAJ,EAAP;AACD;;AACD,SAAOH,KAAP;AACD,CATM;;;;AAWA,MAAMI,YAAY,GAAIC,CAAD,IAAe;AACzC,QAAMN,UAAU,CAACM,CAAD,CAAhB;AACD,CAFM;;;;AAIA,MAAMC,qBAAqB,GAAOC,OAAJ,IACnCA,OAAO,CAACC,KAAR,CAAcJ,YAAd,CADK","sourcesContent":["// @flow\nimport { DisconnectedDevice } from \"@ledgerhq/errors\";\n\nexport const remapError = (error: ?Error) => {\n  if (!error || !error.message) return error;\n  if (\n    error.message.includes(\"was disconnected\") ||\n    error.message.includes(\"not found\")\n  ) {\n    return new DisconnectedDevice();\n  }\n  return error;\n};\n\nexport const rethrowError = (e: ?Error) => {\n  throw remapError(e);\n};\n\nexport const decoratePromiseErrors = <A>(promise: Promise<A>): Promise<A> =>\n  promise.catch(rethrowError);\n"],"file":"remapErrors.js"}