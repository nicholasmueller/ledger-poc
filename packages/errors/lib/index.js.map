{"version":3,"sources":["../src/index.js"],"names":["AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","DisconnectedDevice","DisconnectedDeviceDuringOperation","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","FirmwareNotRecognized","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotSupportedLegacyAddress","GasLessThanEstimate","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateFetchFileFail","UpdateIncorrectHash","UpdateIncorrectSig","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportRaceCondition","TransportWebUSBGestureRequired","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeRequired","FeeTooHigh","SyncError","PairingFailed","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","NoDBPathGiven","DBWrongPassword","DBNotReset","TransportError","message","id","name","stack","Error","prototype","e","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","getAltStatusMessage","code","TransportStatusError","statusCode","statusText","Object","keys","find","k","smsg","statusCodeStr","toString"],"mappings":"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","sourcesContent":["// @flow\n\nimport {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer\n} from \"./helpers\";\n\nexport {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer\n};\n\nexport const AccountNameRequiredError = createCustomErrorClass(\n  \"AccountNameRequired\"\n);\nexport const AccountNotSupported = createCustomErrorClass(\n  \"AccountNotSupported\"\n);\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\n  \"CashAddrNotSupported\"\n);\nexport const CurrencyNotSupported = createCustomErrorClass(\n  \"CurrencyNotSupported\"\n);\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\n  \"DeviceAppVerifyNotSupported\"\n);\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\n  \"DeviceGenuineSocketEarlyClose\"\n);\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\n  \"DeviceOnDashboardExpected\"\n);\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\n  \"DeviceOnDashboardUnexpected\"\n);\nexport const DeviceInOSUExpected = createCustomErrorClass(\n  \"DeviceInOSUExpected\"\n);\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\n  \"DeviceSocketNoBulkStatus\"\n);\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\n  \"DisconnectedDeviceDuringOperation\"\n);\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\n  \"EthAppPleaseEnableContractData\"\n);\nexport const FeeEstimationFailed = createCustomErrorClass(\n  \"FeeEstimationFailed\"\n);\nexport const FirmwareNotRecognized = createCustomErrorClass(\n  \"FirmwareNotRecognized\"\n);\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\n  \"InvalidAddressBecauseDestinationIsAlsoSource\"\n);\nexport const LatestMCUInstalledError = createCustomErrorClass(\n  \"LatestMCUInstalledError\"\n);\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\n  \"LedgerAPIErrorWithMessage\"\n);\nexport const LedgerAPINotAvailable = createCustomErrorClass(\n  \"LedgerAPINotAvailable\"\n);\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\n  \"ManagerAppAlreadyInstalled\"\n);\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\n  \"ManagerAppRelyOnBTC\"\n);\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\n  \"ManagerAppDepInstallRequired\"\n);\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\n  \"ManagerAppDepUninstallRequired\"\n);\nexport const ManagerDeviceLockedError = createCustomErrorClass(\n  \"ManagerDeviceLocked\"\n);\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerFirmwareNotEnoughSpace\"\n);\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerNotEnoughSpace\"\n);\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\n  \"ManagerUninstallBTCDep\"\n);\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\n  \"NotEnoughBalanceToDelegate\"\n);\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\n  \"NotEnoughBalanceInParentAccount\"\n);\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\n  \"NotEnoughSpendableBalance\"\n);\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\n  \"NotEnoughBalanceBecauseDestinationNotCreated\"\n);\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\n  \"NotSupportedLegacyAddress\"\n);\nexport const GasLessThanEstimate = createCustomErrorClass(\n  \"GasLessThanEstimate\"\n);\nexport const PasswordsDontMatchError = createCustomErrorClass(\n  \"PasswordsDontMatch\"\n);\nexport const PasswordIncorrectError = createCustomErrorClass(\n  \"PasswordIncorrect\"\n);\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\n  \"RecommendSubAccountsToEmpty\"\n);\nexport const RecommendUndelegation = createCustomErrorClass(\n  \"RecommendUndelegation\"\n);\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\n  \"UnexpectedBootloader\"\n);\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\n  \"MCUNotGenuineToDashboard\"\n);\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountReceive\"\n);\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountSend\"\n);\nexport const UpdateFetchFileFail = createCustomErrorClass(\n  \"UpdateFetchFileFail\"\n);\nexport const UpdateIncorrectHash = createCustomErrorClass(\n  \"UpdateIncorrectHash\"\n);\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\n  \"UserRefusedDeviceNameChange\"\n);\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\n  \"UserRefusedFirmwareUpdate\"\n);\nexport const UserRefusedAllowManager = createCustomErrorClass(\n  \"UserRefusedAllowManager\"\n);\nexport const UserRefusedOnDevice = createCustomErrorClass(\n  \"UserRefusedOnDevice\"\n); // TODO rename because it's just for transaction refusal\nexport const TransportOpenUserCancelled = createCustomErrorClass(\n  \"TransportOpenUserCancelled\"\n);\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\n  \"TransportInterfaceNotAvailable\"\n);\nexport const TransportRaceCondition = createCustomErrorClass(\n  \"TransportRaceCondition\"\n);\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\n  \"TransportWebUSBGestureRequired\"\n);\nexport const DeviceShouldStayInApp = createCustomErrorClass(\n  \"DeviceShouldStayInApp\"\n);\nexport const WebsocketConnectionError = createCustomErrorClass(\n  \"WebsocketConnectionError\"\n);\nexport const WebsocketConnectionFailed = createCustomErrorClass(\n  \"WebsocketConnectionFailed\"\n);\nexport const WrongDeviceForAccount = createCustomErrorClass(\n  \"WrongDeviceForAccount\"\n);\nexport const WrongAppForCurrency = createCustomErrorClass(\n  \"WrongAppForCurrency\"\n);\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\n  \"FirmwareOrAppUpdateRequired\"\n);\n\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport function TransportError(message: string, id: string) {\n  this.name = \"TransportError\";\n  this.message = message;\n  this.stack = new Error().stack;\n  this.id = id;\n}\n//$FlowFixMe\nTransportError.prototype = new Error();\n\naddCustomErrorDeserializer(\n  \"TransportError\",\n  e => new TransportError(e.message, e.id)\n);\n\nexport const StatusCodes = {\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  INCORRECT_LENGTH: 0x6700,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  INCORRECT_DATA: 0x6a80,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  TECHNICAL_PROBLEM: 0x6f00,\n  OK: 0x9000,\n  MEMORY_PROBLEM: 0x9240,\n  NO_EF_SELECTED: 0x9400,\n  INVALID_OFFSET: 0x9402,\n  FILE_NOT_FOUND: 0x9404,\n  INCONSISTENT_FILE: 0x9408,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  INVALID_KCV: 0x9485,\n  CODE_NOT_INITIALIZED: 0x9802,\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CODE_BLOCKED: 0x9840,\n  MAX_VALUE_REACHED: 0x9850,\n  GP_AUTH_FAILED: 0x6300,\n  LICENSING: 0x6f42,\n  HALTED: 0x6faa\n};\n\nexport function getAltStatusMessage(code: number): ?string {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n    case 0x6a80:\n      return \"Invalid data received\";\n    case 0x6b00:\n      return \"Invalid parameter received\";\n  }\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport function TransportStatusError(statusCode: number) {\n  this.name = \"TransportStatusError\";\n  const statusText =\n    Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) ||\n    \"UNKNOWN_ERROR\";\n  const smsg = getAltStatusMessage(statusCode) || statusText;\n  const statusCodeStr = statusCode.toString(16);\n  this.message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n  this.stack = new Error().stack;\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n}\n//$FlowFixMe\nTransportStatusError.prototype = new Error();\n\naddCustomErrorDeserializer(\n  \"TransportStatusError\",\n  e => new TransportStatusError(e.statusCode)\n);\n"],"file":"index.js"}