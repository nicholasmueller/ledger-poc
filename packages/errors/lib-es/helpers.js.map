{"version":3,"sources":["../src/helpers.js"],"names":["errorClasses","deserializers","addCustomErrorDeserializer","name","deserializer","createCustomErrorClass","C","CustomError","message","fields","Object","assign","stack","Error","prototype","deserializeError","object","msg","JSON","parse","e","error","des","constructor","console","warn","create","prop","hasOwnProperty","captureStackTrace","String","serializeError","value","destroyCircular","from","seen","to","push","key","keys","indexOf","slice"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-disable no-continue */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\n\nconst errorClasses = {};\nconst deserializers = {};\n\nexport const addCustomErrorDeserializer = (\n  name: string,\n  deserializer: Object => *\n) => {\n  deserializers[name] = deserializer;\n};\n\nexport const createCustomErrorClass = (name: string): Class<any> => {\n  const C = function CustomError(message?: string, fields?: Object) {\n    Object.assign(this, fields);\n    this.name = name;\n    this.message = message || name;\n    this.stack = new Error().stack;\n  };\n  // $FlowFixMe\n  C.prototype = new Error();\n\n  errorClasses[name] = C;\n  // $FlowFixMe we can't easily type a subset of Error for now...\n  return C;\n};\n\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object: mixed): Error => {\n  if (typeof object === \"object\" && object) {\n    try {\n      // $FlowFixMe FIXME HACK\n      const msg = JSON.parse(object.message);\n      if (msg.message && msg.name) {\n        object = msg;\n      }\n    } catch (e) {\n      // nothing\n    }\n\n    let error;\n    if (typeof object.name === \"string\") {\n      const { name } = object;\n      const des = deserializers[name];\n      if (des) {\n        error = des(object);\n      } else {\n        let constructor = name === \"Error\" ? Error : errorClasses[name];\n\n        if (!constructor) {\n          console.warn(\"deserializing an unknown class '\" + name + \"'\");\n          constructor = createCustomErrorClass(name);\n        }\n\n        error = Object.create(constructor.prototype);\n        try {\n          for (const prop in object) {\n            if (object.hasOwnProperty(prop)) {\n              error[prop] = object[prop];\n            }\n          }\n        } catch (e) {\n          // sometimes setting a property can fail (e.g. .name)\n        }\n      }\n    } else {\n      error = new Error(object.message);\n    }\n\n    if (!error.stack && Error.captureStackTrace) {\n      Error.captureStackTrace(error, deserializeError);\n    }\n    return error;\n  }\n  return new Error(String(object));\n};\n\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (value: mixed) => {\n  if (!value) return value;\n  if (typeof value === \"object\") {\n    return destroyCircular(value, []);\n  }\n  if (typeof value === \"function\") {\n    return `[Function: ${value.name || \"anonymous\"}]`;\n  }\n  return value;\n};\n\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from: Object, seen) {\n  const to = {};\n  seen.push(from);\n  for (const key of Object.keys(from)) {\n    const value = from[key];\n    if (typeof value === \"function\") {\n      continue;\n    }\n    if (!value || typeof value !== \"object\") {\n      to[key] = value;\n      continue;\n    }\n    if (seen.indexOf(from[key]) === -1) {\n      to[key] = destroyCircular(from[key], seen.slice(0));\n      continue;\n    }\n    to[key] = \"[Circular]\";\n  }\n  if (typeof from.name === \"string\") {\n    to.name = from.name;\n  }\n  if (typeof from.message === \"string\") {\n    to.message = from.message;\n  }\n  if (typeof from.stack === \"string\") {\n    to.stack = from.stack;\n  }\n  return to;\n}\n"],"file":"helpers.js"}